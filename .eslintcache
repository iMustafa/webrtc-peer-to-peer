[{"/Users/imustafa/Projects/Freelancer/webrtc/src/App.js":"1","/Users/imustafa/Projects/Freelancer/webrtc/src/index.js":"2","/Users/imustafa/Projects/Freelancer/webrtc/src/components/message.js":"3","/Users/imustafa/Projects/Freelancer/webrtc/src/components/bottom-page.js":"4","/Users/imustafa/Projects/Freelancer/webrtc/src/redux/index.js":"5","/Users/imustafa/Projects/Freelancer/webrtc/src/components/gender-button.js":"6","/Users/imustafa/Projects/Freelancer/webrtc/src/components/gender-dialog.js":"7","/Users/imustafa/Projects/Freelancer/webrtc/src/redux/reducers/messages.reducer.js":"8","/Users/imustafa/Projects/Freelancer/webrtc/src/components/start-button.js":"9","/Users/imustafa/Projects/Freelancer/webrtc/src/redux/reducers/index.js":"10","/Users/imustafa/Projects/Freelancer/webrtc/src/redux/reducers/peer.reducer.js":"11","/Users/imustafa/Projects/Freelancer/webrtc/src/redux/reducers/user.reducer.js":"12","/Users/imustafa/Projects/Freelancer/webrtc/src/helpers/index.js":"13","/Users/imustafa/Projects/Freelancer/webrtc/src/components/splash-screen.js":"14","/Users/imustafa/Projects/Freelancer/webrtc/src/components/skip-button.js":"15","/Users/imustafa/Projects/Freelancer/webrtc/src/components/desktop-messages.js":"16","/Users/imustafa/Projects/Freelancer/webrtc/src/redux/reducers/mobile.reducer.js":"17","/Users/imustafa/Projects/Freelancer/webrtc/src/components/mobile/mobile-messages.js":"18","/Users/imustafa/Projects/Freelancer/webrtc/src/components/mobile/mobile-bottom-bar.js":"19","/Users/imustafa/Projects/Freelancer/webrtc/src/components/mobile/mobile-text-field.js":"20","/Users/imustafa/Projects/Freelancer/webrtc/src/components/stop-button.js":"21","/Users/imustafa/Projects/Freelancer/webrtc/src/components/ad-container.js":"22"},{"size":7563,"mtime":1610786681930,"results":"23","hashOfConfig":"24"},{"size":359,"mtime":1610588745636,"results":"25","hashOfConfig":"24"},{"size":1609,"mtime":1610750415852,"results":"26","hashOfConfig":"24"},{"size":6535,"mtime":1610580571108,"results":"27","hashOfConfig":"24"},{"size":135,"mtime":1610588562059,"results":"28","hashOfConfig":"24"},{"size":1427,"mtime":1610679884254,"results":"29","hashOfConfig":"24"},{"size":2045,"mtime":1610678836794,"results":"30","hashOfConfig":"24"},{"size":376,"mtime":1610677208893,"results":"31","hashOfConfig":"24"},{"size":1734,"mtime":1610777555425,"results":"32","hashOfConfig":"24"},{"size":354,"mtime":1610771948745,"results":"33","hashOfConfig":"24"},{"size":360,"mtime":1610686216118,"results":"34","hashOfConfig":"24"},{"size":1360,"mtime":1610771472845,"results":"35","hashOfConfig":"24"},{"size":667,"mtime":1610753499355,"results":"36","hashOfConfig":"24"},{"size":614,"mtime":1610773887424,"results":"37","hashOfConfig":"24"},{"size":1198,"mtime":1610777718959,"results":"38","hashOfConfig":"24"},{"size":3448,"mtime":1610783542783,"results":"39","hashOfConfig":"24"},{"size":511,"mtime":1610785488963,"results":"40","hashOfConfig":"24"},{"size":895,"mtime":1610785531892,"results":"41","hashOfConfig":"24"},{"size":1404,"mtime":1610785447378,"results":"42","hashOfConfig":"24"},{"size":1795,"mtime":1610772807496,"results":"43","hashOfConfig":"24"},{"size":1052,"mtime":1610773057124,"results":"44","hashOfConfig":"24"},{"size":428,"mtime":1610776490235,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"h3rpn5",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/imustafa/Projects/Freelancer/webrtc/src/App.js",["98","99","100","101","102","103"],"import { useEffect, useState, useRef, Fragment } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Peer from \"peerjs\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport BottomPage from \"./components/bottom-page\";\nimport StopButton from \"./components/stop-button\";\nimport { CanvasArt } from \"./helpers\";\nimport SplashScreen from \"./components/splash-screen\";\nimport SkipButton from \"./components/skip-button\";\nimport AdPlaceholder from \"./components/ad-container\";\nimport DesktopMessages from \"./components/desktop-messages\";\nimport MobileBottomBar from \"./components/mobile/mobile-bottom-bar\";\nimport MobileMessages from \"./components/mobile/mobile-messages\";\nimport StartButton from \"./components/start-button\";\n\nconst socket = socketIOClient();\n\nconst useStyles = makeStyles(() => ({\n  playButton: {\n    color: \"#FFF\",\n    fontSize: 82,\n  },\n  skipButton: {\n    color: \"#FFF\",\n    fontSize: 50,\n  },\n}));\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const { userId, roomId, guestId, isSearching } = useSelector(\n    (state) => state.user\n  );\n  const callR = useSelector((state) => state.peer.call);\n  const facingMode = useSelector((state) => state.peer.facingMode);\n  const { isShowingInput, isKeyboardFocused } = useSelector(\n    (state) => state.mobile\n  );\n\n  const myVideoRef = useRef();\n  const userVideoRef = useRef();\n  const canvasRef = useRef();\n\n  const [isMobile] = useState(\n    window.innerWidth <= 500 && window.innerHeight <= 900\n  );\n\n  const endCall = (call) => {\n    dispatch({ type: \"END_CALL\" });\n    dispatch({ type: \"CLEAR_MESSAGES\" });\n    userVideoRef.current.srcObject = null;\n    socket.emit(\"pair-to-room\");\n    call.close();\n  };\n\n  const disconnect = (call) => {\n    dispatch({ type: \"DISCONNECT\" });\n    dispatch({ type: \"CLEAR_MESSAGES\" });\n    userVideoRef.current.srcObject = null;\n    call.close();\n  };\n\n  useEffect(() => {\n    socket.once(\"connection-rebound\", (clientId) => {\n      dispatch({ type: \"SET_USER_ID\", payload: clientId });\n    });\n    CanvasArt(canvasRef);\n  }, []);\n\n  useEffect(() => {\n    const getUserMedia = async () => {\n      try {\n        const peer = new Peer(userId, {});\n        peer.on(\"error\", (e) => {\n          console.log(e);\n        });\n\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true,\n        });\n\n        addVideoStream(stream, true);\n\n        socket.on(\"paired-to-room\", ({ room }) => {\n          const peerIdArr = room.split(\"#\");\n          const guestId = peerIdArr[0] === userId ? peerIdArr[1] : peerIdArr[0];\n          if (peerIdArr[0] === userId) {\n            const call = peer.call(guestId, stream);\n            dispatch({ type: \"SET_CALL\", payload: call });\n            socket.on(\"peer-disconnected\", (_) => {\n              endCall(call);\n            });\n            socket.on(\"calls-disconnected\", (_) => {\n              disconnect(call);\n            });\n          }\n          dispatch({ type: \"SET_GUEST_ID\", payload: guestId });\n          dispatch({ type: \"SET_ROOM_ID\", payload: room });\n        });\n\n        peer.on(\"call\", (call) => {\n          dispatch({ type: \"SET_CALL\", payload: call });\n          call.answer(stream);\n\n          socket.on(\"peer-disconnected\", (_) => {\n            endCall(call);\n          });\n          socket.on(\"calls-disconnected\", (_) => {\n            disconnect(call);\n          });\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    if (userId) getUserMedia();\n  }, [userId]);\n\n  useEffect(() => {\n    if (callR) {\n      callR.on(\"stream\", (userVideoStream) => {\n        addVideoStream(userVideoStream);\n      });\n    }\n  }, [callR]);\n\n  const replaceTrack = async () => {\n    // try {\n    //   const oldTrack = callR.peerConnection.getSenders()[1];\n    //   const stream = await navigator.mediaDevices.getUserMedia({\n    //     video: { facingMode: facingMode == \"user\" ? \"environment\" : \"user\" },\n    //     audio: false,\n    //   });\n    //   const videoTrack = stream.getVideoTracks()[0];\n    //   oldTrack.replaceTrack(videoTrack);\n    // } catch (e) {\n    //   console.log(e);\n    // }\n  };\n\n  const addVideoStream = (stream, isMine = false) => {\n    (isMine ? myVideoRef : userVideoRef).current.srcObject = stream;\n    (isMine ? myVideoRef : userVideoRef).current.addEventListener(\n      \"loadedmetadata\",\n      (_) => {\n        if (isMine) myVideoRef.current.muted = true;\n        (isMine ? myVideoRef : userVideoRef).current.play();\n      }\n    );\n  };\n\n  return (\n    <Fragment>\n      {!isMobile ? (\n        <Fragment>\n          <div className=\"root\">\n            <div\n              className=\"video-grid\"\n              onClick={() => {\n                dispatch({ type: \"SHOW_EMOJI_PICKER\", payload: false });\n              }}\n            >\n              <div className=\"video-container\">\n                <video ref={userVideoRef} hidden={!roomId} />\n                <canvas ref={canvasRef} hidden={roomId} />\n                <AdPlaceholder />\n                <SplashScreen socket={socket} />\n              </div>\n              <div className=\"video-container\">\n                <video ref={myVideoRef} />\n              </div>\n            </div>\n\n            <div className=\"bottom-group\">\n              <div\n                className=\"room-controls\"\n                onClick={() => {\n                  dispatch({ type: \"SHOW_EMOJI_PICKER\", payload: false });\n                }}\n              >\n                <StartButton hide socket={socket} />\n                <StopButton socket={socket} />\n                {isSearching && !roomId && <CircularProgress />}\n                <SkipButton socket={socket} />\n              </div>\n\n              <DesktopMessages socket={socket} />\n            </div>\n          </div>\n          <BottomPage />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <div className={`mobile-root ${isKeyboardFocused ? \"small\" : \"\"}`}>\n            <div className=\"video-grid-mobile\">\n              <div className=\"video-container-mobile wide\">\n                {roomId ? (\n                  <div className=\"spinner\">\n                    <CircularProgress size={80} />\n                  </div>\n                ) : (\n                  <Fragment />\n                )}\n                <video playsInline={true} ref={userVideoRef} />\n                <canvas ref={canvasRef} hidden={roomId} />\n                <AdPlaceholder />\n                <SplashScreen socket={socket} />\n              </div>\n\n              <div\n                className={`video-container-mobile my-mobile-video ${\n                  isKeyboardFocused ? \"hide\" : \"show\"\n                }`}\n              >\n                <video playsInline={true} ref={myVideoRef} />\n                <MobileMessages socket={socket} />\n              </div>\n            </div>\n            <div className=\"bottom-part-container-mobile\">\n              <div\n                className={\n                  !isShowingInput\n                    ? \"bottom-part-mobile\"\n                    : \"bottom-part-mobile white\"\n                }\n              >\n                {isSearching && !roomId ? (\n                  <CircularProgress />\n                ) : (\n                  <MobileBottomBar socket={socket} />\n                )}\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default connect(null, {})(App);\n","/Users/imustafa/Projects/Freelancer/webrtc/src/index.js",[],["104","105"],"/Users/imustafa/Projects/Freelancer/webrtc/src/components/message.js",["106","107","108","109","110"],"import { makeStyles } from \"@material-ui/core\";\nimport { useSelector, connect } from \"react-redux\";\nimport clsx from \"clsx\";\nimport MaleIcon from \"../images/male-icon.png\";\nimport FemaleIcon from \"../images/female-icon.png\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: 5,\n  },\n  rootRight: {\n    justifyContent: \"flex-end\",\n  },\n  avatar: {\n    width: \"40px\",\n    height: \"40px\",\n    objectFit: \"cover\",\n  },\n  message: {\n    margin: \"0 0 0 15px\",\n    backgroundColor: \"#FFF\",\n    width: \"50%\",\n    padding: \"5px 5px 5px 15px\",\n    borderRadius: \"20px\",\n    boxShadow: \"0 0 1px 1px rgba(0, 0, 0, 0.15)\",\n  },\n  avatarRight: {\n    order: 2,\n  },\n  blueMsg: {\n    backgroundColor: \"#3F7BFE !important\",\n    color: \"#FFF\",\n    margin: \"0 15px 0 0\",\n  },\n}));\n\nconst Message = ({ message }) => {\n  const classes = useStyles();\n  const { gender, userId } = useSelector((state) => state.user);\n\n  return (\n    <div\n      className={\n        message.sentBy == userId\n          ? classes.root\n          : clsx(classes.root, classes.rootRight)\n      }\n    >\n      <img\n        src={gender == \"male\" ? MaleIcon : FemaleIcon}\n        className={\n          message.sentBy == userId\n            ? classes.avatar\n            : clsx(classes.avatar, classes.avatarRight)\n        }\n      />\n      <p\n        className={\n          message.sentBy == userId\n            ? classes.message\n            : clsx(classes.message, classes.blueMsg)\n        }\n      >\n        {message.message}\n      </p>\n    </div>\n  );\n};\n\nexport default connect(null, {})(Message);\n","/Users/imustafa/Projects/Freelancer/webrtc/src/components/bottom-page.js",[],["111","112"],"/Users/imustafa/Projects/Freelancer/webrtc/src/redux/index.js",[],["113","114"],"/Users/imustafa/Projects/Freelancer/webrtc/src/components/gender-button.js",["115","116"],"import { Fragment, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MaleIcon from \"../images/male-icon.png\";\nimport FemaleIcon from \"../images/female-icon.png\";\nimport GenderDialog from \"./gender-dialog\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: \"#FFF\",\n    display: 'flex',\n    \"&:hover\": {\n      backgroundColor: \"#FFF !important\",\n    },\n  },\n  text: {},\n  avatar: {\n    width: 30,\n    height: 30,\n    objectFit: \"cover\",\n    margin: \"0 10px\",\n  },\n}));\n\nconst GenderButton = () => {\n  const classes = useStyles();\n  const gender = useSelector((state) => state.user.gender);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleModalOpen = () => {\n    setShowModal(true);\n  };\n\n  return (\n    <Fragment>\n      <Button className={classes.root} onClick={handleModalOpen}>\n        <Typography className={classes.text}>I AM:</Typography>\n        <img\n          src={gender == \"male\" ? MaleIcon : FemaleIcon}\n          className={classes.avatar}\n        />\n        <Typography className={classes.text}>{gender.toUpperCase()}</Typography>\n      </Button>\n      <GenderDialog showModal={showModal} setShowModal={setShowModal} />\n    </Fragment>\n  );\n};\n\nexport default connect(null, {})(GenderButton);\n",["117","118"],"/Users/imustafa/Projects/Freelancer/webrtc/src/components/gender-dialog.js",["119","120"],"/Users/imustafa/Projects/Freelancer/webrtc/src/redux/reducers/messages.reducer.js",[],"/Users/imustafa/Projects/Freelancer/webrtc/src/components/start-button.js",[],"/Users/imustafa/Projects/Freelancer/webrtc/src/redux/reducers/index.js",[],"/Users/imustafa/Projects/Freelancer/webrtc/src/redux/reducers/peer.reducer.js",[],"/Users/imustafa/Projects/Freelancer/webrtc/src/redux/reducers/user.reducer.js",[],"/Users/imustafa/Projects/Freelancer/webrtc/src/helpers/index.js",["121"],"/Users/imustafa/Projects/Freelancer/webrtc/src/components/splash-screen.js",[],"/Users/imustafa/Projects/Freelancer/webrtc/src/components/skip-button.js",["122"],"/Users/imustafa/Projects/Freelancer/webrtc/src/components/desktop-messages.js",["123"],"/Users/imustafa/Projects/Freelancer/webrtc/src/redux/reducers/mobile.reducer.js",[],"/Users/imustafa/Projects/Freelancer/webrtc/src/components/mobile/mobile-messages.js",["124"],"/Users/imustafa/Projects/Freelancer/webrtc/src/components/mobile/mobile-bottom-bar.js",[],"/Users/imustafa/Projects/Freelancer/webrtc/src/components/mobile/mobile-text-field.js",["125"],"/Users/imustafa/Projects/Freelancer/webrtc/src/components/stop-button.js",["126"],"import { Fragment } from \"react\";\nimport { useSelector, connect, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport IconButton from \"@material-ui/core/IconButton\";\nconst useStyles = makeStyles(() => ({\n  playButton: {\n    color: \"#FFF\",\n    fontSize: 82,\n  },\n}));\n\nconst StopButton = ({ socket, isMobile }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { roomId, isSearching } = useSelector((state) => state.user);\n\n  const handleStop = () => {\n    dispatch({ type: \"SET_IS_SEARCHING\", payload: false });\n    socket.emit(\"exit\", { room: roomId });\n  };\n\n  return roomId ? (\n    isMobile ? (\n      <IconButton onClick={handleStop}>\n        <StopIcon style={{ color: \"#FFF\" }} />\n      </IconButton>\n    ) : (\n      <IconButton style={{ marginLeft: 25 }} onClick={handleStop}>\n        <StopIcon className={classes.playButton} />\n      </IconButton>\n    )\n  ) : (\n    <Fragment />\n  );\n};\n\nexport default connect(null, {})(StopButton);\n","/Users/imustafa/Projects/Freelancer/webrtc/src/components/ad-container.js",["127","128"],{"ruleId":"129","severity":1,"message":"130","line":33,"column":9,"nodeType":"131","messageId":"132","endLine":33,"endColumn":16},{"ruleId":"129","severity":1,"message":"133","line":35,"column":27,"nodeType":"131","messageId":"132","endLine":35,"endColumn":34},{"ruleId":"129","severity":1,"message":"134","line":39,"column":9,"nodeType":"131","messageId":"132","endLine":39,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":72,"column":6,"nodeType":"137","endLine":72,"endColumn":8,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"139","line":122,"column":6,"nodeType":"137","endLine":122,"endColumn":14,"suggestions":"140"},{"ruleId":"129","severity":1,"message":"141","line":132,"column":9,"nodeType":"131","messageId":"132","endLine":132,"endColumn":21},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":46,"column":24,"nodeType":"148","messageId":"149","endLine":46,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":51,"column":7,"nodeType":"152","endLine":58,"endColumn":9},{"ruleId":"146","severity":1,"message":"147","line":52,"column":21,"nodeType":"148","messageId":"149","endLine":52,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":54,"column":26,"nodeType":"148","messageId":"149","endLine":54,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":61,"column":26,"nodeType":"148","messageId":"149","endLine":61,"endColumn":28},{"ruleId":"142","replacedBy":"153"},{"ruleId":"144","replacedBy":"154"},{"ruleId":"142","replacedBy":"155"},{"ruleId":"144","replacedBy":"156"},{"ruleId":"150","severity":1,"message":"151","line":40,"column":9,"nodeType":"152","endLine":43,"endColumn":11},{"ruleId":"146","severity":1,"message":"147","line":41,"column":23,"nodeType":"148","messageId":"149","endLine":41,"endColumn":25},{"ruleId":"142","replacedBy":"157"},{"ruleId":"144","replacedBy":"158"},{"ruleId":"150","severity":1,"message":"151","line":57,"column":13,"nodeType":"152","endLine":57,"endColumn":62},{"ruleId":"150","severity":1,"message":"151","line":67,"column":13,"nodeType":"152","endLine":67,"endColumn":64},{"ruleId":"129","severity":1,"message":"159","line":20,"column":3,"nodeType":"131","messageId":"132","endLine":20,"endColumn":13},{"ruleId":"129","severity":1,"message":"160","line":17,"column":11,"nodeType":"131","messageId":"132","endLine":17,"endColumn":22},{"ruleId":"135","severity":1,"message":"161","line":33,"column":6,"nodeType":"137","endLine":33,"endColumn":8,"suggestions":"162"},{"ruleId":"135","severity":1,"message":"161","line":17,"column":6,"nodeType":"137","endLine":17,"endColumn":8,"suggestions":"163"},{"ruleId":"129","severity":1,"message":"164","line":14,"column":9,"nodeType":"131","messageId":"132","endLine":14,"endColumn":23},{"ruleId":"129","severity":1,"message":"160","line":16,"column":19,"nodeType":"131","messageId":"132","endLine":16,"endColumn":30},{"ruleId":"129","severity":1,"message":"165","line":6,"column":24,"nodeType":"131","messageId":"132","endLine":6,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":10,"column":7,"nodeType":"152","endLine":10,"endColumn":68},"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'guestId' is assigned a value but never used.","'facingMode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["166"],"React Hook useEffect has missing dependencies: 'disconnect', 'dispatch', and 'endCall'. Either include them or remove the dependency array.",["167"],"'replaceTrack' is assigned a value but never used.","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["168"],["169"],["168"],["169"],["168"],["169"],"'intervalId' is assigned a value but never used.","'isSearching' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'socket'. Either include them or remove the dependency array.",["170"],["171"],"'isShowingInput' is assigned a value but never used.","'skips' is assigned a value but never used.",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},"Update the dependencies array to be: [dispatch]",{"range":"179","text":"180"},"Update the dependencies array to be: [disconnect, dispatch, endCall, userId]",{"range":"181","text":"182"},"Update the dependencies array to be: [dispatch, socket]",{"range":"183","text":"184"},{"range":"185","text":"184"},[2215,2217],"[dispatch]",[3670,3678],"[disconnect, dispatch, endCall, userId]",[1267,1269],"[dispatch, socket]",[632,634]]